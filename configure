#!/bin/bash

# This script was taken from Rblapi. All the credit goes to
# Dirk Eddelbuettel and Jeroen Ooms.
#
# https://github.com/Rblp/Rblpapi/blob/master/configure

# helper function for downloads
download() {
    url=${1}
    libcurl=$(${R_HOME}/bin/Rscript -e 'cat(capabilities()[["libcurl"]])')
    # when we have libcurl in R, use it -- else fall back to curl
    if [ ${libcurl} == "TRUE" ]; then
        file=$(basename ${url})
        ${R_HOME}/bin/Rscript -e "download.file(\"${url}\", \"${file}\", quiet=TRUE, method='libcurl')"
    else
        curl -s -k -L -O ${url}
    fi
}

sysname=$(${R_HOME}/bin/Rscript -e 'cat(Sys.info()["sysname"])')
if [ ${sysname} == "Linux" ]; then
    platform="linux"
elif [ ${sysname} == "Darwin" ]; then
    platform="osx"
else
    echo "Unsupported platform: $sysname"
    exit -1
fi

# all header files come with the package

# check if libpetsc lives on the (DY)LD_LIBRARY_PATH; in that case, 
# use it together with whatever mpi.h lives on the search path

# tbc


# if we can't find libpetsc, then install the binaries as part of the R package
download https://github.com/jtilly/taoR/archive/petsc-3.6.3.tar.gz
mkdir -p inst/lib

if [ ${platform} == "osx" ]; then
    tar xfz petsc-3.6.3.tar.gz  --strip=1 -C inst/lib taoR-petsc-3.6.3/libpetsc.3.6.3.dylib
    cd inst/lib
    ln -s libpetsc.3.6.3.dylib libpetsc.dylib
    cd ../..
fi

if [ ${platform} == "linux" ]; then
    tar xfz petsc-3.6.3.tar.gz  --strip=1 -C inst/lib taoR-petsc-3.6.3/libpetsc.so
    cd inst/lib
    ln -s libpetsc.so libpetsc.so.3.6
    cd ../..
fi

rpath=$(${R_HOME}/bin/Rscript -e 'cat(file.path(.libPaths()[1], "taoR", "lib"))')
libpath=../inst/lib

sed -e"s|@rpath@|"${rpath}"|" -e"s|@libpath@|"${libpath}"|" src/Makevars.in > src/Makevars

exit 0
